#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// nl.b3p.brmo.loader.jdbc.GeometryJdbcConverterFactory
	c50 [label=<<table title="nl.b3p.brmo.loader.jdbc.GeometryJdbcConverterFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GeometryJdbcConverterFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GeometryJdbcConverterFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GeometryJdbcConverterFactory() </td></tr>
<tr><td align="left" balign="left"> + getGeometryJdbcConverter(conn : Connection) : GeometryJdbcConverter </td></tr>
		</table></td></tr>
		</table>>, URL="./GeometryJdbcConverterFactory.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.jdbc.MssqlConnectionUnwrapper
	c51 [label=<<table title="nl.b3p.brmo.loader.jdbc.MssqlConnectionUnwrapper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MssqlConnectionUnwrapper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MssqlConnectionUnwrapper </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MssqlConnectionUnwrapper() </td></tr>
<tr><td align="left" balign="left"> + unwrap(c : Connection) : JtdsConnection </td></tr>
		</table></td></tr>
		</table>>, URL="./MssqlConnectionUnwrapper.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.jdbc.LongColumnListHandler
	c52 [label=<<table title="nl.b3p.brmo.loader.jdbc.LongColumnListHandler" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LongColumnListHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LongColumnListHandler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LongColumnListHandler() </td></tr>
<tr><td align="left" balign="left"> + LongColumnListHandler(columnIndex : int) </td></tr>
<tr><td align="left" balign="left"> + LongColumnListHandler(columnName : String) </td></tr>
<tr><td align="left" balign="left"> # handleRow(rs : ResultSet) : Long </td></tr>
		</table></td></tr>
		</table>>, URL="./LongColumnListHandler.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.jdbc.OracleConnectionUnwrapper
	c53 [label=<<table title="nl.b3p.brmo.loader.jdbc.OracleConnectionUnwrapper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OracleConnectionUnwrapper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OracleConnectionUnwrapper </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OracleConnectionUnwrapper() </td></tr>
<tr><td align="left" balign="left"> + unwrap(c : Connection) : OracleConnection </td></tr>
		</table></td></tr>
		</table>>, URL="./OracleConnectionUnwrapper.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.jdbc.Oracle11JdbcConverter
	c54 [label=<<table title="nl.b3p.brmo.loader.jdbc.Oracle11JdbcConverter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Oracle11JdbcConverter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Oracle11JdbcConverter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Oracle11JdbcConverter(oc : OracleConnection) </td></tr>
<tr><td align="left" balign="left"> + buildLimitSql(sql : StringBuilder, limit : int) : StringBuilder </td></tr>
		</table></td></tr>
		</table>>, URL="./Oracle11JdbcConverter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.jdbc.MssqlJdbcConverter
	c55 [label=<<table title="nl.b3p.brmo.loader.jdbc.MssqlJdbcConverter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MssqlJdbcConverter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MssqlJdbcConverter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MssqlJdbcConverter() </td></tr>
<tr><td align="left" balign="left"> + isDuplicateKeyViolationMessage(message : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + createPSGeometryPlaceholder() : String </td></tr>
<tr><td align="left" balign="left"> + convertToNativeGeometryObject(param : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getSchema() : String </td></tr>
<tr><td align="left" balign="left"> + setSchema(schema : String) </td></tr>
<tr><td align="left" balign="left"> + getGeomTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + buildPaginationSql(sql : String, offset : int, limit : int) : String </td></tr>
<tr><td align="left" balign="left"> + buildLimitSql(sql : StringBuilder, limit : int) : StringBuilder </td></tr>
<tr><td align="left" balign="left"> + useSavepoints() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPmdKnownBroken() : boolean </td></tr>
<tr><td align="left" balign="left"> + getGeotoolsDBTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getMViewsSQL() : String </td></tr>
<tr><td align="left" balign="left"> + getMViewRefreshSQL(mview : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./MssqlJdbcConverter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.jdbc.OracleJdbcConverter
	c56 [label=<<table title="nl.b3p.brmo.loader.jdbc.OracleJdbcConverter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OracleJdbcConverter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OracleJdbcConverter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OracleJdbcConverter(oc : OracleConnection) </td></tr>
<tr><td align="left" balign="left"> + isDuplicateKeyViolationMessage(message : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + createPSGeometryPlaceholder() : String </td></tr>
<tr><td align="left" balign="left"> + convertToNativeGeometryObject(param : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getSchema() : String </td></tr>
<tr><td align="left" balign="left"> + setSchema(schema : String) </td></tr>
<tr><td align="left" balign="left"> + getGeomTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + buildPaginationSql(sql : String, offset : int, limit : int) : String </td></tr>
<tr><td align="left" balign="left"> + buildLimitSql(sql : StringBuilder, limit : int) : StringBuilder </td></tr>
<tr><td align="left" balign="left"> + useSavepoints() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPmdKnownBroken() : boolean </td></tr>
<tr><td align="left" balign="left"> + getGeotoolsDBTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getMViewsSQL() : String </td></tr>
<tr><td align="left" balign="left"> + getMViewRefreshSQL(mview : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./OracleJdbcConverter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.jdbc.PostgisJdbcConverter
	c57 [label=<<table title="nl.b3p.brmo.loader.jdbc.PostgisJdbcConverter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PostgisJdbcConverter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PostgisJdbcConverter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PostgisJdbcConverter() </td></tr>
<tr><td align="left" balign="left"> + isDuplicateKeyViolationMessage(message : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + createPSGeometryPlaceholder() : String </td></tr>
<tr><td align="left" balign="left"> + convertToNativeGeometryObject(param : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getSchema() : String </td></tr>
<tr><td align="left" balign="left"> + setSchema(schema : String) </td></tr>
<tr><td align="left" balign="left"> + getGeomTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + buildPaginationSql(sql : String, offset : int, limit : int) : String </td></tr>
<tr><td align="left" balign="left"> + buildLimitSql(sql : StringBuilder, limit : int) : StringBuilder </td></tr>
<tr><td align="left" balign="left"> + useSavepoints() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPmdKnownBroken() : boolean </td></tr>
<tr><td align="left" balign="left"> + getGeotoolsDBTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getMViewsSQL() : String </td></tr>
<tr><td align="left" balign="left"> + getMViewRefreshSQL(mview : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./PostgisJdbcConverter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.jdbc.GeometryJdbcConverter
	c58 [label=<<table title="nl.b3p.brmo.loader.jdbc.GeometryJdbcConverter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GeometryJdbcConverter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> GeometryJdbcConverter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GeometryJdbcConverter() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertToNativeGeometryObject(param : String) : Object </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + createPSGeometryPlaceholder() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getSchema() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getGeomTypeName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isDuplicateKeyViolationMessage(message : String) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + buildPaginationSql(sql : String, offset : int, limit : int) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + buildLimitSql(sql : StringBuilder, limit : int) : StringBuilder </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + useSavepoints() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isPmdKnownBroken() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMViewsSQL() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMViewRefreshSQL(mview : String) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getGeotoolsDBTypeName() : String </font></td></tr>
<tr><td align="left" balign="left"> + convertToSQLObject(stringValue : String, cm : ColumnMetadata, tableName : String, column : String) : Object </td></tr>
		</table></td></tr>
		</table>>, URL="./GeometryJdbcConverter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.jdbc.ColumnMetadata
	c59 [label=<<table title="nl.b3p.brmo.loader.jdbc.ColumnMetadata" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ColumnMetadata.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ColumnMetadata </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ColumnMetadata(columnMetadataRs : ResultSet) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getDataType() : int </td></tr>
<tr><td align="left" balign="left"> + setDataType(dataType : int) </td></tr>
<tr><td align="left" balign="left"> + getTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + setTypeName(typeName : String) </td></tr>
<tr><td align="left" balign="left"> + getSize() : int </td></tr>
<tr><td align="left" balign="left"> + setSize(size : int) </td></tr>
<tr><td align="left" balign="left"> + getDecimalDigits() : Integer </td></tr>
<tr><td align="left" balign="left"> + setDecimalDigits(decimalDigits : Integer) </td></tr>
<tr><td align="left" balign="left"> + getPosition() : int </td></tr>
<tr><td align="left" balign="left"> + setPosition(position : int) </td></tr>
<tr><td align="left" balign="left"> + isNullable() : boolean </td></tr>
<tr><td align="left" balign="left"> + setNullable(nullable : boolean) </td></tr>
<tr><td align="left" balign="left"> + getCharOctetLength() : Integer </td></tr>
<tr><td align="left" balign="left"> + setCharOctetLength(charOctetLength : Integer) </td></tr>
<tr><td align="left" balign="left"> + isAutoIncrement() : boolean </td></tr>
<tr><td align="left" balign="left"> + setAutoIncrement(autoIncrement : boolean) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + typeToString() : String </td></tr>
<tr><td align="left" balign="left"> + toStringFixedWidth(allColumns : Collection&lt;ColumnMetadata&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + compareTo(rhs : Object) : int </td></tr>
		</table></td></tr>
		</table>>, URL="./ColumnMetadata.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//nl.b3p.brmo.loader.jdbc.Oracle11JdbcConverter extends nl.b3p.brmo.loader.jdbc.OracleJdbcConverter
	c56:p -> c54:p [dir=back,arrowtail=empty];
	//nl.b3p.brmo.loader.jdbc.MssqlJdbcConverter extends nl.b3p.brmo.loader.jdbc.GeometryJdbcConverter
	c58:p -> c55:p [dir=back,arrowtail=empty];
	//nl.b3p.brmo.loader.jdbc.OracleJdbcConverter extends nl.b3p.brmo.loader.jdbc.GeometryJdbcConverter
	c58:p -> c56:p [dir=back,arrowtail=empty];
	//nl.b3p.brmo.loader.jdbc.PostgisJdbcConverter extends nl.b3p.brmo.loader.jdbc.GeometryJdbcConverter
	c58:p -> c57:p [dir=back,arrowtail=empty];
}

